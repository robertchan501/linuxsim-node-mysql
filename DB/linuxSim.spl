/*
SQLyog Professional v12.09 (64 bit)
MySQL - 10.1.13-MariaDB : Database - linuxsim
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`linuxsim` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `linuxsim`;

/*Table structure for table `exercises` */

DROP TABLE IF EXISTS `exercises`;

CREATE TABLE `exercises` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Exercise ID',
  `name` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Exercise Name',
  `title` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Exercise Title',
  `command` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Correct Command',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=21 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `exercises` */

insert  into `exercises`(`id`,`name`,`title`,`command`) values (1,'exercise 1','Please create a \"solider\" directory','mkdir solider'),(2,'exercise 2','Please create a \"solider\" directory','mkdir solider'),(3,'exercise 3','Please create a \"solider\" directory','mkdir solider'),(4,'exercise 4','Please create a \"solider\" directory','mkdir solider'),(5,'exercise 5','Please create a \"solider\" directory','mkdir solider'),(6,'exercise 6','Please create a \"solider\" directory','mkdir solider'),(7,'exercise 7','Please create a \"solider\" directory','mkdir solider'),(8,'exercise 8','Please create a \"solider\" directory','mkdir solider'),(9,'exercise 9','Please create a \"solider\" directory','mkdir solider'),(10,'exercise 10','Please create a \"solider\" directory','mkdir solider'),(11,'exercise 11','Please create a \"solider\" directory','mkdir solider'),(12,'exercise 12','Please create a \"solider\" directory','mkdir solider'),(13,'exercise 13','Please create a \"solider\" directory','mkdir solider'),(14,'exercise 14','Please create a \"solider\" directory','mkdir solider'),(15,'exercise 15','Please create a \"solider\" directory','mkdir solider'),(16,'exercise 16','Please create a \"solider\" directory','mkdir solider'),(17,'exercise 17','Please create a \"solider\" directory','mkdir solider'),(18,'exercise 18','Please create a \"solider\" directory','mkdir solider'),(19,'exercise 19','Please create a \"solider\" directory','mkdir solider'),(20,'exercise 20','Please create a \"solider\" directory','mkdir solider');

/*Table structure for table `modules` */

DROP TABLE IF EXISTS `modules`;

CREATE TABLE `modules` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'Module ID',
  `name` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Module Name',
  `title` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Module Title',
  `description` text COLLATE utf8_bin,
  `command` varchar(64) COLLATE utf8_bin NOT NULL,
  `result` varchar(128) COLLATE utf8_bin NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=23 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `modules` */

insert  into `modules`(`id`,`name`,`title`,`description`,`command`,`result`) values (1,'ls /home','Module 1: ls /home','The ls command is used to list all the files in a directory.   \r\n \r\nIn the command window, enter the command to give a long listing of the directory /home.','ls /home','2014 2015 hardware.txt'),(2,'Create Directory','Module 2: Create Directory','It\'s time to learning about a command to create directory.\r\nWe\'ll create a directory using the \"mkdir\" command like <mkdir + space + directoryname>.\r\nPlease try create a directory it named the \"primates\".','mkdir application','That\'s right.'),(3,'Move and Rename File','Module 3: Moving Around the Filesystem','Now, let\'s move all of the primate files into our newly created directory. To move a file, you just use the \"mv\" command. For example, to move a file called \"wolves\" into directory \"dogs\", you would type mv wolves dogs Renaming files is simply a case of \"moving\" a file from one name to another. For example, to rename file \"wolves\" to \"coyotes\", you would type mv wolves coyotes Let\'s start by moving \"chimps\" into the \"primates\" directory. Type the command to move file \"chimps\" into directory \"primates\".','mv myfile tools','Ok, good!'),(4,'Change Directory','Module 4: Change Directory','Rather than let things get tedious by having you type the commands to move the other two primate files into the \"primates\" directory, we\'ll assume that you\'ve already typed them.\r\n \r\n Now, we want to go into the \"primates\" directory and admire our handiwork. To change directories, use the \"cd\" command, which stands for -- you guessed it -- \"change directory\".\r\n \r\n For example, to change to directory \"dogs\", you would type\r\n \r\n cd dogs\r\n \r\n At the \"zoo>\" prompt, type the command to change to directory \"primates\".','cd single','wonderful, Ok!'),(5,'Get Current Location','Module 5: Get Current Location','Some people modify their personal Linux configuration so that whenever they change to another directory, the command prompt changes to reflect it. The prompt shown to the right is an example of one. It lists the machine name first (zoo), then a \':\', and finally the current directory (primates). If you do not have this sort of configuration, then you will need to learn a command which tells you where you are in the directory structure.\r\n\r\nTo find out where you are, use the \"pwd\" command, which stands for \"print working directory\".\r\n\r\nType it at the command prompt to verify your current location. Then, at the second prompt, type the command which lists the contents of the current directory, so we can be sure that everything was moved into this directory properly.','pwd','That\'s right'),(6,'Pathnames','Module 6: Folder Structure','The folder is a unit of system director.','dir','That\'s right'),(7,'Copy File','Module 7: Copy File','All right, enough theory -- it\'s time for practice. We need to move \"cobras\" from the \"reptiles\" directory to the \"snakes\" directory, but out of paranoia, we\'re going to copy it and then remove the original file after we\'re sure that it was copied correctly. The copy command is \"cp\" and it has the same syntax as the \"mv\" command. For example:\r\n\r\n                          cp apples apples2\r\n\r\nWe\'re not in the \"reptiles\" directory, so you\'ll have to use a relative pathname in your copy command. Type the command to copy \"cobras\" from the \"reptiles\" directory to the \"snakes\" directory.','cp reptiles/cobras snakes','That\'s right'),(8,'Remove File','Module 8: Remove File','Let\'s assume that you\'ve checked the copy of \"cobras\" which is in the \"snakes\" directory and everything is okay. We should now remove the original \"cobras\" file in the \"reptiles\" directory. The remove command is \"rm\". For example, to remove file \"platypus\", you would type\r\n\r\n	            rm platypus\r\n\r\nType the command to remove the \"cobras\" file from the \"reptiles\" directory.','rm reptiles/cobras','That\'s right'),(9,'Remove Directory','Module 9: Remove Directory','Now we should remove the \"reptiles\" directory. The \"remove directory\" command is \"rmdir\". For example, to remove directory \"fish\", you would type\r\n\r\n                            rmdir fish\r\n\r\nType the command to remove directory \"reptiles\".','rmdir reptiles','That\'s right'),(10,'File Security','Module 10: File Security','Now it\'s time to talk about security. Linux is a multi-user operating system, so it has security to prevent people from accessing each other\'s confidential files.\r\n\r\nIn our zoo, we don\'t want anyone to modify the primate files except for those workers who take care of the primates. It will take quite a bit of explanation before we can show you how to arrange this sort of security.\r\n\r\nWhen you execute an \"ls\" command, you are not given any information about the security of the files, because by default \"ls\" only lists the names of files. You can get more information by using an \"option\" with the \"ls\" command. All options start with a \'-\'. For example, to execute \"ls\" with the \"long listing\" option, you would type\r\n\r\n		ls -l\r\n\r\nWhen you do so, each file will be listed on a separate line in long format. There is an example in the window on the right.\r\n\r\nThere are lots of other options you can use with the ls command, but we won\'t need them to accomplish our goals at the zoo.\r\n\r\nClick the right arrow to continue.\r\n			','ls -l','-rw-r--r-- keeper prim 547 9:31 chimps'),(11,'Change File Permission','Module 11: Change File Permission','The command you use to change the security permissions on files has a horribly cryptic name. It\'s called \"chmod\", which stands for \"change mode\", because the nine security characters are collectively called the security \"mode\" of the file.\r\n\r\nNow it will become clear why we named the three \"rwx\" sets \"user\", \"group\", and \"other\". The first argument you give to the \"chmod\" command is \'u\', \'g\', \'o\', or a combination of them which specifies which of the three \"rwx\" sets you want to modify. For example, if you want to give \"execute\" permission to the world (\"other\") for file \"gorillas\", you would start by typing\r\n\r\n                            chmod o\r\n\r\nNow you would type a \'+\' to say that you are \"adding\" a permission.\r\n\r\n                            chmod o+\r\n\r\nThen you would type an \'x\' to say that you are adding \"execute\" permission.\r\n\r\n                            chmod o+x\r\n\r\nFinally, specify which file you are changing.\r\n\r\n                      chmod o+x gorillas\r\n','ls -l','-rw-r--r-- keeper prim 547 9:31 chimps'),(12,'Wildcards','Module 12: Wildcards','We could get you to type two more \"chmod\" commands to modify the permissions of \"gorillas\" and \"sq_monks\", but there\'s an easier way using \"wildcards\".\r\n\r\nIn case you\'re wondering what the \"tron>\" prompt is all about, we\'re just using another imaginary machine called \"tron\", which could be a machine similar to \"zoo\".\r\n\r\nA wildcard allows you to specify more than one file at the same time. The \'*\' matches any number of characters. For example, if you want to execute a command on all files in the current directory, you would specify \'*\' as the filename. If you want to be more selective and match only files which end in \"ing\", you would use \"*ing\". Note that the \'*\' can even match zero characters, so \"*ing\" would match \"ing\" as well as \"sing\".\r\n\r\nThe other wildcard, \'?\', is not used very often, but it can be useful. It matches exactly one character. For example, if you want to match \"sport\", but not \"spat\", you would use \"sp??t\". The first \'?\' matches the \'a\' in \"spat\", but the second \'?\' can\'t match anything, so \"spat\" fails.\r\n\r\nClick the right arrow.','ls *','ing    sing    spat    sport    tennis'),(13,'Groups Memberships','Module 13: Groups Memberships','The default Linux security model is a bit inflexible. To give special access (such as modification privileges) to a group of people, you have to get your system administrator to create a group with those people in it. Furthermore, if you would like to give a different set of access privileges (such as read access) to another group of people, you can\'t do it because you can only assign one group owner per file or directory. To solve this problem, you can use ACLs (Access Control Lists), a topic which is beyond the scope of this tutorial.\r\n\r\nWhile we\'re on the subject of groups, we should see which groups you\'re in. To get a listing of your group memberships, type\r\n\r\n		groups\r\n\r\nTry it at the command prompt.','groups','admin       all-users'),(14,'User Information','Module 14: User Information','Now you should know the name of the command used to find out a person\'s User ID, but you don\'t know its syntax. Type the appropriate \"man\" command at the prompt.','man','finger(1)    User Commands    finger(1)\r\nNAME\r\n  finger - user information lookup program\r\nSYNOPSIS\r\n  finger [-lmsp] [user ...]'),(15,'Find File','Module 15: Find File','The command used to find files is called, appropriately enough, \"find\". But even though the name is easy to remember, the syntax is quite treacherous. A typical \"find\" command looks something like this:\r\n\r\n                    find ~ -name \"poem*\"\r\n\r\nThis example is shown at right. The first argument you specify is the directory to start the search from. If \"find\" always searched the entire tree on a system, it would be very inefficient, so this first argument allows you to limit your search. In the above example, it will be started from your home directory (~) and will then search the entire tree under it.\r\n\r\nThe \"-name\" option says that you are searching for a file\'s name. At first, this might seem obvious and redundant, but you have to understand just how powerful the \"find\" command is. You can use it to search for files of a particular size, date, owner, and a variety of other criteria.\r\n\r\nThe argument to \"-name\" can be as simple as \"poem\" if you know that is the exact name of the file. But, if you\'re not sure whether the file is called \"poem\", \"poems\", or even \"poem-favorite\", then you can use a wildcard, like \'*\'. However, when you use a wildcard, you need to surround the argument in quotes. If you don\'t, you will receive a rude error message.\r\n\r\nNow we\'ll give you a hint that will save you a bit of typing. Your first try at using this command to find joke files in Greg\'s home directory would probably begin with\r\n\r\n                          find ~jester ...\r\n\r\nBut there is a simpler way. Remember the \'..\' symbol which is used to represent a parent directory (e.g. \"cd ..\")? Well, there is a similar symbol which represents your current directory. It is just a single \'.\'. So, since you are already in the \"~jester\" directory, you can begin your command with \"find .\".\r\n\r\nWhew! That was a heck of a lot of explanation for just one command.\r\n\r\nClick the right arrow.\r\n			',' find ~ -name \"poem*\"','~/doc/poem1'),(16,'Copy Tree','Module 16: Copy Tree','Maybe we should give up on Greg Jester for a while and try to get some more interesting files from another friend. It so happens that your friend Belinda Bookie has several sports pools which she keeps online. You decide to copy Belinda\'s \"pools\" directory to your home directory, so you can set up your own pools.\r\n\r\nThe regular \"cp\" command will not let you copy directories, but if you use the \"-r\" option, it will. For example, if you wanted to copy a directory called \"jokes\" from Jester\'s home directory to your own, you would type\r\n\r\n                   cp -r ~jester/jokes ~\r\n\r\nThis would copy the entire \"jokes\" directory tree.\r\n\r\nType the command which will copy Belinda\'s \"pools\" directory to your home directory.','cp -r ~bookie/pools ~','cp: No space left on device'),(17,'Remove Tree','Module 17: Remove Tree','When your \"cp -r\" command failed due to a lack of disk space, it did not clean up after itself. That is, it did not delete the files which it managed to copy before running out of space. It would be a good idea to clean up this mess ourselves.\r\n\r\nRecall that the \"rmdir\" command only deletes empty directories, so we cannot use it to delete the \"pools\" directory in one fell swoop, since \"pools\" contains at least one file. The command that allows you to remove an entire directory tree is \"rm -r\". For example, to remove a directory called \"stocks\" and all of its subdirectories and files, you would type\r\n\r\n                             rm -r stocks\r\n\r\nType the command to remove your incomplete \"pools\" directory.','rm -r pools','Good. It has been removed.');

/*Table structure for table `users` */

DROP TABLE IF EXISTS `users`;

CREATE TABLE `users` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'User ID',
  `username` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Username',
  `email` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Email',
  `password` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Login Password',
  `fullname` varchar(64) COLLATE utf8_bin NOT NULL COMMENT 'Name',
  `created` datetime DEFAULT NULL COMMENT 'Signup Date',
  PRIMARY KEY (`id`)
) ENGINE=MyISAM AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COLLATE=utf8_bin;

/*Data for the table `users` */

insert  into `users`(`id`,`username`,`email`,`password`,`fullname`,`created`) values (1,'aaa','aaa@hotmail.com','@123456789','rufus vic','2016-09-05 17:10:07'),(5,'tiger522','abc@mail.com','78ece9b8af58ce1cab97a541dd2f8a30','abc','2016-10-03 03:23:07');

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
